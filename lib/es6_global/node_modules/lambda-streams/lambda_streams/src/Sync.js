// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "../../../../../../node_modules/bs-platform/lib/es6/curry.js";

function make_input(f) {
  return f;
}

function make_output(f) {
  return f;
}

function make_mutator(initial) {
  var value = {
    contents: initial
  };
  var input = function (param) {
    return value.contents;
  };
  var output = function (v) {
    value.contents = v;
    
  };
  return [
          input,
          output
        ];
}

function pure(value, param) {
  return value;
}

function enumerate(param) {
  var index = {
    contents: 0
  };
  return function (param) {
    index.contents = index.contents + 1 | 0;
    return index.contents;
  };
}

function next(stream) {
  return Curry._1(stream, undefined);
}

function send(value, output_stream) {
  return Curry._1(output_stream, value);
}

function pipe(output_stream, input_stream) {
  while(true) {
    Curry._1(output_stream, Curry._1(input_stream, undefined));
  };
  
}

function accumulate(n, f, init, stream) {
  var index = 0;
  var acc = init;
  while(index < n) {
    index = index + 1 | 0;
    acc = Curry._2(f, acc, Curry._1(stream, undefined));
  };
  return acc;
}

function map(f, stream, param) {
  return Curry._1(f, Curry._1(stream, undefined));
}

function filter(f, stream, param) {
  var value = Curry._1(stream, undefined);
  while(!Curry._1(f, value)) {
    value = Curry._1(stream, undefined);
  };
  return value;
}

function scan(f, init, stream) {
  var acc = {
    contents: init
  };
  return function (param) {
    acc.contents = Curry._2(f, acc.contents, Curry._1(stream, undefined));
    return acc.contents;
  };
}

export {
  make_input ,
  make_output ,
  make_mutator ,
  pure ,
  enumerate ,
  next ,
  send ,
  pipe ,
  accumulate ,
  map ,
  filter ,
  scan ,
  
}
/* No side effect */
